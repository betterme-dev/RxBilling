apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'org.jetbrains.dokka-android'

android {

    defaultConfig {
        versionName "4.0.0"
        minSdkVersion minSdkVer
        targetSdkVersion targetSdkVer
        compileSdkVersion compileSdkVer

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            postprocessing {
                removeUnusedCode false
                removeUnusedResources false
                obfuscate false
                optimizeCode false
                proguardFile 'proguard-rules.pro'
            }
        }
    }

}

dokka {
    outputFormat = 'html'
    outputDirectory = "$buildDir/javadoc"
}

dependencies {

    implementation developmentDependencies.timber
    implementation dataDependencies.rxJava3
    implementation dataDependencies.rxAndroid3
    implementation dataDependencies.billingClient
    implementation kotlinDependencies.kotlinStdLib

    compileOnly presentationDependencies.lifecycleExtensions
    compileOnly presentationDependencies.lifecycleRuntime
    compileOnly presentationDependencies.lifecycleExtensions

    kapt presentationDependencies.lifecycleCompiler

    testImplementation testDependencies.jUnit
    testImplementation testDependencies.mockito
    testImplementation testDependencies.mockitoKotlin
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    archiveClassifier.set('sources')
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task dokkaJavadoc(type: org.jetbrains.dokka.gradle.DokkaTask) {
    outputFormat = 'javadoc'
    outputDirectory = "$buildDir/javadoc"
}

task javadocJar(type: Jar, dependsOn: dokkaJavadoc) {
    archiveClassifier.set('javadoc')
    from javadoc.destinationDir
}
artifacts {
    archives javadocJar
    archives sourcesJar
}
